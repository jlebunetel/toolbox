# Generated by Django 5.0.3 on 2024-03-16 10:07

import uuid

import accounts.models
import django.contrib.postgres.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Family",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When was this object created?",
                        verbose_name="creation date",
                    ),
                ),
                (
                    "changed_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When was this object last modified?",
                        verbose_name="last modification date",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        default="👪",
                        help_text="Pick an emoji",
                        max_length=2,
                        verbose_name="icon",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        default="My family", max_length=255, verbose_name="title"
                    ),
                ),
                (
                    "changed_by",
                    models.ForeignKey(
                        help_text="Who last modified this object?",
                        limit_choices_to={"is_active": True},
                        on_delete=models.SET(accounts.models.get_sentinel_user),
                        related_name="%(app_label)s_%(class)ss_as_changed_by",
                        related_query_name="%(app_label)s_%(class)s_as_changed_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="last editor",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="The creator of this very object.",
                        limit_choices_to={"is_active": True},
                        on_delete=models.SET(accounts.models.get_sentinel_user),
                        related_name="%(app_label)s_%(class)ss_as_owner",
                        related_query_name="%(app_label)s_%(class)s_as_owner",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="creator",
                    ),
                ),
                (
                    "users",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Users authorized to view and edit people linked to "
                        "this object.",
                        related_name="%(app_label)s_families",
                        related_query_name="%(app_label)s_family",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="users",
                    ),
                ),
            ],
            options={
                "verbose_name": "family",
                "verbose_name_plural": "families",
                "ordering": ["title"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Calendar",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When was this object created?",
                        verbose_name="creation date",
                    ),
                ),
                (
                    "changed_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When was this object last modified?",
                        verbose_name="last modification date",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        default="🎂",
                        help_text="Pick a valid emoji",
                        max_length=2,
                        verbose_name="icon",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        default="My calendar", max_length=255, verbose_name="title"
                    ),
                ),
                (
                    "hide_death_anniversaries",
                    models.BooleanField(
                        default=True,
                        help_text="Should we hide death anniversaries in this "
                        "calendar?",
                        verbose_name="hide death anniversaries?",
                    ),
                ),
                (
                    "years_ahead",
                    models.PositiveSmallIntegerField(
                        default=3,
                        help_text="How many years into the future should we display "
                        "birthdays?",
                        verbose_name="years ahead",
                    ),
                ),
                (
                    "changed_by",
                    models.ForeignKey(
                        help_text="Who last modified this object?",
                        limit_choices_to={"is_active": True},
                        on_delete=models.SET(accounts.models.get_sentinel_user),
                        related_name="%(app_label)s_%(class)ss_as_changed_by",
                        related_query_name="%(app_label)s_%(class)s_as_changed_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="last editor",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="The creator of this very object.",
                        limit_choices_to={"is_active": True},
                        on_delete=models.SET(accounts.models.get_sentinel_user),
                        related_name="%(app_label)s_%(class)ss_as_owner",
                        related_query_name="%(app_label)s_%(class)s_as_owner",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="creator",
                    ),
                ),
                (
                    "families",
                    models.ManyToManyField(
                        related_name="%(app_label)s_calendars",
                        related_query_name="%(app_label)s_calendar",
                        to="anniversaries.family",
                        verbose_name="families",
                    ),
                ),
            ],
            options={
                "verbose_name": "calendar",
                "verbose_name_plural": "calendars",
                "ordering": ["title"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When was this object created?",
                        verbose_name="creation date",
                    ),
                ),
                (
                    "changed_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When was this object last modified?",
                        verbose_name="last modification date",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "nickname",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="nickname"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=255, verbose_name="first name"),
                ),
                (
                    "middle_names",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(blank=True, max_length=255),
                        blank=True,
                        help_text="Middle names separated by commas.",
                        size=None,
                        verbose_name="middle names",
                    ),
                ),
                (
                    "birth_name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="birth name"
                    ),
                ),
                (
                    "married_name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="married name"
                    ),
                ),
                (
                    "preferred_name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="preferred name"
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="date of birth"
                    ),
                ),
                (
                    "date_of_death",
                    models.DateField(
                        blank=True, null=True, verbose_name="date of death"
                    ),
                ),
                (
                    "sex",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "🧒 unknown"), (1, "👦 male"), (2, "👧 female")],
                        default=0,
                        verbose_name="sex",
                    ),
                ),
                (
                    "species",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "🦄 unknown"),
                            (1, "🧒 human"),
                            (2, "🐱 cat"),
                            (3, "🐶 dog"),
                        ],
                        default=1,
                        verbose_name="species",
                    ),
                ),
                (
                    "changed_by",
                    models.ForeignKey(
                        help_text="Who last modified this object?",
                        limit_choices_to={"is_active": True},
                        on_delete=models.SET(accounts.models.get_sentinel_user),
                        related_name="%(app_label)s_%(class)ss_as_changed_by",
                        related_query_name="%(app_label)s_%(class)s_as_changed_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="last editor",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="The creator of this very object.",
                        limit_choices_to={"is_active": True},
                        on_delete=models.SET(accounts.models.get_sentinel_user),
                        related_name="%(app_label)s_%(class)ss_as_owner",
                        related_query_name="%(app_label)s_%(class)s_as_owner",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="creator",
                    ),
                ),
                (
                    "families",
                    models.ManyToManyField(
                        related_name="anniversaries_family_members",
                        related_query_name="anniversaries_family_member",
                        to="anniversaries.family",
                        verbose_name="families",
                    ),
                ),
            ],
            options={
                "verbose_name": "person",
                "verbose_name_plural": "people",
                "ordering": ["-date_of_birth"],
                "abstract": False,
            },
        ),
    ]
